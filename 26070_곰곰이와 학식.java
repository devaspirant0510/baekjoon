/*============================================================================
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*@@@@@@@@@@@@@@@
 @@@@@@@@@@@@@@@@@@@@@@@@$ .@@@@@@@@@@@@@@@@@@@@@@@@@@**@@@@@@@@@@@@@@@
 @@@@@@@@@@@@@@@@@@@@@@@@   @@@@@@@@@@@@@@@@@@@@@@@@@@*!@@@@@@@@@@@@@@@
 @@@@@@@@@@  .@@=.      ~: .@@@@@@@@@@@@@@@@@@@@@@@@@! !@@@@@@@@@@@@@@@
 @@@@@@@@@:    ,           *@@@@@@@@@@@@@@@@@@@@@@#@@! ,@!:@@@@@@@@@@@@
 @@@@@@@@@= .~              ~@@@@@@@@@@@@@@@@@@@@#  @  .*  !**=@@@@@@@@
 @@@@@@@@@@~       *,-!      = :@@@@@@@@@@@@@@@@@=  ! *,.  !   ;@@@@@@@
 @@@@@@@@@@@$.         .    ~    @@@@@@@@@@@@@@@@@ ; -:    ,    =@@@@@@
 @@@@@@@@@@@=    .      :   ~     @@@@@@@@@@@@@@@@, ;     !,    *@@@@@@
 @@@@@@@@@@@;   ,           ~    :#@@@@@@@@@@@@!   -!.    ~  -;.@@@@@
 @@@@@@@@@@@,   *  *     ;  ~   .**@@@@@@@@@@@@# . ~  *. ~   * .  ~@@@@
 @@@@@@@@@@@,   !  *-    :       ,!@@@@@@@@@@@@  ;  ! *  :   .     @@@@
 @@@@@@@@@@@,   *  **    :        *@@@@@@@@@@@-   ,  , :;     ,   ,@@@@
 @@@@@@@@@@@;   .        !   :    @@@@@@@@@@@!                ! . #@@@@
 @@@@@@@@@@@=              **     @@@@@@@@@@@   !             !!*,*@@@@
 @@@@@@@@@@@@    .      : .,. !  @@@@@@@@@@@*   !    .        !    !@@@
 @@@@@@@@@@@@     ,    .  !,*   @@@@@@@@@@@@.        *        *     @@@
 @@@@@@@@@@@@.      ~!-   .     @@@@@@@@@@@@                  *    ~@@@
 @@@@@@@@@@@@;                  @@@@@@@@@@@@   !;**   .       * -! @@@@
 @@@@@@@@@@@@!                  @@@@@@@@@  :       ..!        ! -!@@@@@
 @@@@@@@@@@@@~                  @@@@@@@@*   !   !   !         !  =#**@@
 @@@@@@@@@@@@:~~:-----~~~:~~~~~~#@@@@@@@!        .;,          ! !,  .@@
 @@@@@@@@@@@!:::::-            .@@@@@@@@=    ,                :!  ;*=@@
 @@@@@@@@@@@:::::.             .@@@@@@@@@!     !.    -;        ;    =@@
 @@@@@@@@@@:::::.        !: -  ;@@@@@@#@@@#-      *.            ! !@@@@
 @@@@@@@@@:::::    .    .*:-   =@@@@@@@@*@@@!     : .~~.         *@@@@@
 @@@@@@@@:::::,    ;.    !: :  ;@@@@@@@#@@@#@#-   .,,-~ .  -      ;==@@
 @@@@@@@;::::.      !  ! !; :! ~@@@@@@@@@$=@@@@@*~..,  .,   ~       -!!
 @@@@@@;::::;         .: ! :: .@@@@@@@@@*@@@@@@@@@...  ..     ;
 @@@@;::::;;;         ;: * :  =@@@@@@@@@@@@@@@@@@@~,,.,-.      :,    -:
 @#::::;;;;;;-         ;  :!  @@@@@@@@@@@@@@@@@@@@* ,..,         ,  ,~*
 @:=!;;;;;;;;*            :  =@@@@@@@@@@@@@@@@@@@@@              ~,*~=@
 *@@@@@!;;;;;;.         ;;  ~@@@@@@@@@@@@@@@@@@@@@@$              @@@@@
 @@@@@@@@@##@@@            ,@@@@@@@@@@@@@@@@@@@@@@@@=             @@@@@
 @@@@@@@@@@@@@@@! .       !@@@@@@@@@@@@@@@@@@@@@@@@@@=  !,       !@@@@@
 @@@@@@@@@@@@@@@@#.,   -*@.@@@@@@@@@@@@@@@@@@@@@@@@@@*    @$     =@@@@@
 @@@@@@@@@@@@@@@@:@@@@@@=@@@@@@@@@@@@@@@@@@@@@@@@@@*    @$     @@@@@@
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*    @*    ;@@@@@@
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@;    @:    @@@@@@@
 @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@.   !@.   ~@@@@@@@
 * ──────────────────────────────────────────────────────────────────────────
 * 🏆 백준 온라인 저지 (Baekjoon Online Judge)
 * ──────────────────────────────────────────────────────────────────────────
 * 📌 문제 번호  : 26070
 * 📌 문제 제목  : 곰곰이와 학식
 * 🔗 문제 링크  : https://www.acmicpc.net/problem/26070
 * ✏️ 작성자     : seungho0510
 * 📅 작성 날짜  : 2025-04-16
 ============================================================================*/

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

public class Main {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int[] students = new int[3];
        int[] tickets = new int[3];
        int i=0;
        for(String el :br.readLine().split(" ")){
            students[i++] = Integer.parseInt(el);
        }
        i=0;
        long eatStudent = 0;
        for(String el: br.readLine().split(" ")) {
            tickets[i++] = Integer.parseInt(el);

            // 10장인데 학생이 1명일경우
            // 음식을 먹은 학생수
            for (int j = 0; j < 3; j++) {
                int max = Math.max(tickets[j] - students[j], 0);
                int usedTicket = Math.max(students[j] - tickets[j], 0);
                tickets[j] = max;
                eatStudent += students[j] - usedTicket;
                students[j] = usedTicket;
            }
        }
        // 일단 남은 티켓이 있다는거 자체가 줄거 다준 상태임 그럼 무조건 변환하고 다음 사람이 줄수있는지 체크
        // 1. 1차적으로 식권 최대한 배부했기때문에 식권 변환해야됨
        // 2. 배분후 줄수있는애들한테 주고 남는거는 1. 으로 돌아가 계속 반복 더이상 식권을 변활할수 없을때까지
        //
        while(!(tickets[0]<3 && tickets[1] <3 && tickets[2]<3)){
            // 티켓 분배
            int a =tickets[0]/3;
            int b =tickets[1]/3;
            int c =tickets[2]/3;
            tickets[1]=a;
            tickets[2]=b;
            tickets[0]=c;
            // 식권 배부
            //
            if(students[0]>0 || tickets[0]>0){
                // ticket 이 남을경우 학생한테 빼도 학생 0으로 만들고 티켓은 티켓-학생수
                if(students[0]<tickets[0]){
                    tickets[0] -= students[0];
                    eatStudent+=students[0];
                    students[0] = 0;
                }
                // 학생이 나마는경우 티켓은 0이고
                else{
                    students[0] = students[0]-tickets[0];
                    eatStudent += tickets[0];
                    tickets[0] =0;
                }
            }
            if(students[1]>0 || tickets[1]>0){
                // ticket 이 남을경우 학생한테 빼도 학생 0으로 만들고 티켓은 티켓-학생수
                if(students[1]<tickets[1]){
                    tickets[1] -= students[1];
                    eatStudent+=students[1];
                    students[1] = 0;
                }
                // 학생이 나마는경우 티켓은 0이고
                else{
                    students[1] = students[1]-tickets[1];
                    eatStudent += tickets[1];
                    tickets[1] =0;
                }
            }
            if(students[2]>0 || tickets[2]>0){
                // ticket 이 남을경우 학생한테 빼도 학생 0으로 만들고 티켓은 티켓-학생수
                if(students[2]<tickets[2]){
                    tickets[2] -= students[2];
                    eatStudent+=students[2];
                    students[2] = 0;
                }
                // 학생이 나마는경우 티켓은 0이고
                else{
                    students[2] = students[2]-tickets[2];
                    eatStudent += tickets[2];
                    tickets[2] =0;
                }
            }

        }
        System.out.println(eatStudent);


    }
}

